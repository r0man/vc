{"id":"vc-208","title":"Preflight degraded mode incorrectly stops ALL work","description":"Current implementation: When baseline fails, executor enters 'degraded mode' and refuses to claim ANY work (executor_event_loop.go:147 returns nil). This is wrong - the executor should be able to work on the blocking issues it creates.\n\nCorrect behavior:\n1. Baseline fails → Create vc-baseline-* issues (P1, open)\n2. Executor continues through normal work-claiming logic\n3. Executor CAN claim those baseline issues\n4. Other work is blocked via dependencies/priority, not by refusing to claim\n5. System is self-healing - executor fixes its own baseline\n\nCurrent blocking: executor_event_loop.go:139-147 (FailureModeBlock case)\nCreates issues but then returns without claiming them.","design":"Remove the 'return nil' from FailureModeBlock case. Instead, let execution continue to the normal work-claiming logic. The vc-baseline-* issues will be claimable as regular P1 work. Consider adding dependencies so baseline issues block other work explicitly.","acceptance_criteria":"- Baseline fails → blocking issues created\n- Executor continues to claim work (doesn't return nil)\n- Executor can claim vc-baseline-* issues\n- Executor works on fixing baseline\n- Tests verify executor claims baseline issues","status":"open","priority":1,"issue_type":"bug","created_at":"2025-10-28T14:32:31.542721-07:00","updated_at":"2025-10-28T14:32:31.542721-07:00"}
