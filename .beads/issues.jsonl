{"id":"vc-217","title":"Sandbox Lifecycle Management","description":"CURRENT: No sandboxes. Agents work directly in main repo. No isolation between missions. Manual git operations.\n\nNEEDED: Automatic sandbox lifecycle for missions using git worktrees.\n\nEach mission gets:\n- Dedicated sandbox directory (.sandboxes/mission-XXX/)\n- Dedicated git branch (mission/vc-XXX-title)\n- Shared by all workers on that mission\n- Auto-created on mission start\n- Auto-cleaned on mission close\n\nWorkers on same mission see each other's commits (shared context).\n\nFROM: MISSIONS.md roadmap Epic 2 (P0)","design":"Database schema:\n- Add issue.sandbox_path TEXT\n- Add issue.branch_name TEXT\n- Store per mission epic\n\nLifecycle functions:\n1. CreateSandbox(missionID):\n   - Generate sandbox path: .sandboxes/mission-{ID}/\n   - Generate branch name: mission/{ID}-{slug}\n   - git worktree add {path} -b {branch}\n   - Update mission issue: sandbox_path, branch_name\n   - Add label: sandbox:mission-{ID}\n\n2. CleanupSandbox(missionID):\n   - git worktree remove {sandbox_path}\n   - git branch -D {branch_name}\n   - Remove label: sandbox:mission-{ID}\n\nAgent executor changes:\n- Before claiming task: lookup mission sandbox\n- Execute agent in sandbox directory\n- Commits go to mission branch\n\nExecutor integration:\n- Mission creation: auto-call CreateSandbox()\n- Mission close: auto-call CleanupSandbox()\n- Task claiming: pass sandbox path to agent","acceptance_criteria":"- issue.sandbox_path and branch_name fields added\n- CreateSandbox() creates worktree + branch\n- CleanupSandbox() removes worktree + branch\n- Agent executor uses mission sandbox\n- Multiple tasks in same mission share sandbox\n- Sandbox cleaned up on mission close\n- Tests: create mission, verify sandbox exists\n- Tests: close mission, verify sandbox removed\n- Tests: multiple workers share sandbox (sequential)","notes":"Epic broken down into 6 child tasks:\n\nvc-241: Add sandbox_path and branch_name to vc_mission_state table [READY]\nvc-242: Implement CreateMissionSandbox() lifecycle function [BLOCKED by vc-241]\nvc-243: Implement CleanupMissionSandbox() lifecycle function [BLOCKED by vc-241]\nvc-244: Update executor to use mission sandboxes [BLOCKED by vc-242]\nvc-245: Auto-cleanup sandbox on mission close [BLOCKED by vc-243, vc-244]\nvc-246: Add comprehensive tests [BLOCKED by vc-245]\n\nDependency chain:\n- vc-241 is ready (no blockers)\n- vc-242 and vc-243 can run in parallel after vc-241\n- vc-244 needs vc-242 complete\n- vc-245 needs both vc-243 and vc-244 complete\n- vc-246 is last (tests all functionality)\n\nSee 'bd dep tree vc-217' for full dependency graph.","status":"open","priority":1,"issue_type":"epic","created_at":"2025-10-28T15:40:36.797252-07:00","updated_at":"2025-10-28T22:05:25.02238-07:00","dependencies":[{"issue_id":"vc-217","depends_on_id":"vc-215","type":"parent-child","created_at":"2025-10-28T15:40:58.876069-07:00","created_by":"stevey"},{"issue_id":"vc-217","depends_on_id":"vc-216","type":"blocks","created_at":"2025-10-28T15:41:03.976916-07:00","created_by":"stevey"}]}
{"id":"vc-241","title":"Add sandbox_path and branch_name to vc_mission_state table","description":"Add sandbox_path and branch_name columns to the vc_mission_state extension table to track sandbox metadata per mission.\n\nCURRENT:\n- vc_mission_state table exists but doesn't store sandbox info\n- Sandbox metadata is only in Manager's in-memory map\n\nNEEDED:\n- ALTER TABLE vc_mission_state ADD COLUMN sandbox_path TEXT\n- ALTER TABLE vc_mission_state ADD COLUMN branch_name TEXT\n- Migration to add columns if not exists\n- Update SetMissionState/GetMissionState to read/write these fields\n\nThis enables persistent tracking of which sandbox belongs to which mission, so workers can find and reuse the shared sandbox.","acceptance_criteria":"- vc_mission_state has sandbox_path column\n- vc_mission_state has branch_name column\n- Migration code adds columns safely (IF NOT EXISTS)\n- SetMissionState persists sandbox_path and branch_name\n- GetMissionState returns sandbox metadata\n- Tests verify persistence across executor restarts","status":"open","priority":1,"issue_type":"task","created_at":"2025-10-28T22:02:18.656106-07:00","updated_at":"2025-10-28T22:02:18.656106-07:00","dependencies":[{"issue_id":"vc-241","depends_on_id":"vc-217","type":"parent-child","created_at":"2025-10-28T22:03:50.416409-07:00","created_by":"stevey"}]}
{"id":"vc-242","title":"Implement CreateMissionSandbox() lifecycle function","description":"Implement CreateMissionSandbox() function that creates a shared sandbox for a mission epic.\n\nCURRENT:\n- sandbox.Manager.Create() exists but creates per-execution sandboxes\n- No mission-level sandbox creation\n\nNEEDED:\n- CreateMissionSandbox(ctx, missionID) function\n- Generates sandbox path: .sandboxes/mission-{ID}/\n- Generates branch name: mission/{ID}-{slug} (slugified title)\n- Calls sandbox.Manager.Create() with mission config\n- Stores sandbox_path and branch_name in vc_mission_state\n- Returns sandbox metadata\n\nDESIGN:\n- Use existing sandbox.Manager under the hood\n- Add wrapper that integrates with vc_mission_state storage\n- Idempotent: calling twice for same mission returns existing sandbox","acceptance_criteria":"- CreateMissionSandbox() function implemented\n- Creates worktree at .sandboxes/mission-{ID}/\n- Creates branch mission/{ID}-{slug}\n- Stores metadata in vc_mission_state table\n- Idempotent (returns existing if called twice)\n- Tests verify sandbox creation\n- Tests verify metadata persistence","status":"open","priority":1,"issue_type":"task","created_at":"2025-10-28T22:02:34.75849-07:00","updated_at":"2025-10-28T22:02:34.75849-07:00","dependencies":[{"issue_id":"vc-242","depends_on_id":"vc-217","type":"parent-child","created_at":"2025-10-28T22:03:56.670224-07:00","created_by":"stevey"},{"issue_id":"vc-242","depends_on_id":"vc-241","type":"blocks","created_at":"2025-10-28T22:04:35.358749-07:00","created_by":"stevey"}]}
{"id":"vc-243","title":"Implement CleanupMissionSandbox() lifecycle function","description":"Implement CleanupMissionSandbox() function that cleans up a mission's shared sandbox.\n\nCURRENT:\n- sandbox.Manager.Cleanup() exists but operates on sandbox instances\n- No mission-level cleanup integration\n\nNEEDED:\n- CleanupMissionSandbox(ctx, missionID) function\n- Looks up sandbox metadata from vc_mission_state\n- Calls sandbox.Manager.Cleanup() for the sandbox\n- Removes worktree and branch\n- Clears sandbox_path and branch_name from vc_mission_state\n- Returns error if sandbox doesn't exist or cleanup fails\n\nDESIGN:\n- Use existing sandbox.Manager.Cleanup() under the hood\n- Add wrapper that integrates with vc_mission_state storage\n- Idempotent: calling twice is safe (no-op if already cleaned)","acceptance_criteria":"- CleanupMissionSandbox() function implemented\n- Removes git worktree\n- Deletes git branch (unless KeepBranches=true)\n- Clears metadata from vc_mission_state table\n- Idempotent (no-op if already cleaned)\n- Tests verify cleanup\n- Tests verify metadata is cleared","status":"open","priority":1,"issue_type":"task","created_at":"2025-10-28T22:02:47.791366-07:00","updated_at":"2025-10-28T22:02:47.791366-07:00","dependencies":[{"issue_id":"vc-243","depends_on_id":"vc-217","type":"parent-child","created_at":"2025-10-28T22:04:02.918618-07:00","created_by":"stevey"},{"issue_id":"vc-243","depends_on_id":"vc-241","type":"blocks","created_at":"2025-10-28T22:04:42.385778-07:00","created_by":"stevey"}]}
{"id":"vc-244","title":"Update executor to use mission sandboxes for task execution","description":"Update executor to look up and use mission sandbox when executing tasks.\n\nCURRENT:\n- Executor executes tasks in parent repo directory\n- No sandbox context passed to agents\n\nNEEDED:\n- Before claiming task: GetMissionForTask(taskID)\n- Look up mission sandbox metadata from vc_mission_state\n- Pass sandbox path to agent executor (working directory)\n- Agent commits go to mission branch (not main)\n\nFLOW:\n1. Executor claims ready task\n2. GetMissionForTask() walks deps to find parent mission epic\n3. Load sandbox_path and branch_name from vc_mission_state\n4. If no sandbox exists yet, call CreateMissionSandbox()\n5. Execute agent with sandbox.Path as working directory\n6. Agent's commits go to mission branch\n\nThis enables all tasks in a mission to share the same sandbox and see each other's changes.","acceptance_criteria":"- Executor calls GetMissionForTask() before execution\n- Looks up sandbox metadata from vc_mission_state\n- Creates sandbox if missing (auto-create on first task)\n- Passes sandbox path to agent as working directory\n- Agent executes in sandbox, not parent repo\n- Commits go to mission branch\n- Tests verify multiple tasks share same sandbox","status":"open","priority":1,"issue_type":"task","created_at":"2025-10-28T22:03:03.536449-07:00","updated_at":"2025-10-28T22:03:03.536449-07:00","dependencies":[{"issue_id":"vc-244","depends_on_id":"vc-217","type":"parent-child","created_at":"2025-10-28T22:04:09.032913-07:00","created_by":"stevey"},{"issue_id":"vc-244","depends_on_id":"vc-242","type":"blocks","created_at":"2025-10-28T22:04:49.327473-07:00","created_by":"stevey"}]}
{"id":"vc-245","title":"Auto-cleanup sandbox on mission close","description":"Automatically call CleanupMissionSandbox() when a mission epic is closed.\n\nCURRENT:\n- Sandboxes are manually cleaned up\n- No automatic cleanup on mission completion\n\nNEEDED:\n- After executor completes a task, check if mission epic is complete (IsEpicComplete)\n- If mission complete, call CleanupMissionSandbox()\n- Remove worktree and branch\n- Clear sandbox metadata\n\nINTEGRATION POINT:\n- result_processor.go processes task completion\n- Already has epic completion checking logic (vc-235)\n- Add sandbox cleanup after epic complete detection\n\nThis ensures sandboxes are automatically cleaned up when missions complete, preventing disk bloat.","acceptance_criteria":"- Executor checks IsEpicComplete() after task execution\n- If mission complete, calls CleanupMissionSandbox()\n- Sandbox is removed after mission close\n- Tests verify auto-cleanup on mission completion\n- Tests verify sandbox persists if mission not complete\n- Manual cleanup command still works (vc cleanup sandboxes)","status":"open","priority":1,"issue_type":"task","created_at":"2025-10-28T22:03:19.156342-07:00","updated_at":"2025-10-28T22:03:19.156342-07:00","dependencies":[{"issue_id":"vc-245","depends_on_id":"vc-217","type":"parent-child","created_at":"2025-10-28T22:04:15.012996-07:00","created_by":"stevey"},{"issue_id":"vc-245","depends_on_id":"vc-243","type":"blocks","created_at":"2025-10-28T22:04:55.624172-07:00","created_by":"stevey"},{"issue_id":"vc-245","depends_on_id":"vc-244","type":"blocks","created_at":"2025-10-28T22:05:01.557555-07:00","created_by":"stevey"}]}
{"id":"vc-246","title":"Add comprehensive tests for mission sandbox lifecycle","description":"Add end-to-end tests verifying mission sandbox lifecycle.\n\nTEST SCENARIOS:\n\n1. **Create Mission Sandbox**:\n   - Create mission epic\n   - Call CreateMissionSandbox()\n   - Verify worktree exists at .sandboxes/mission-{ID}/\n   - Verify branch created: mission/{ID}-{slug}\n   - Verify metadata stored in vc_mission_state\n\n2. **Shared Sandbox Across Tasks**:\n   - Create mission with 2 tasks\n   - Execute task 1 (creates sandbox)\n   - Make file changes in task 1\n   - Execute task 2 (reuses sandbox)\n   - Verify task 2 sees changes from task 1\n   - Verify both tasks use same branch\n\n3. **Sandbox Cleanup on Mission Close**:\n   - Create and execute mission\n   - Close all tasks (mission becomes complete)\n   - Verify CleanupMissionSandbox() called\n   - Verify worktree removed\n   - Verify branch deleted\n   - Verify metadata cleared from vc_mission_state\n\n4. **Idempotency**:\n   - Call CreateMissionSandbox() twice\n   - Verify only one sandbox created\n   - Call CleanupMissionSandbox() twice\n   - Verify no errors\n\n5. **Persistence**:\n   - Create sandbox\n   - Stop executor\n   - Restart executor\n   - Verify sandbox metadata loaded from vc_mission_state\n   - Verify executor can continue using sandbox","acceptance_criteria":"- Test: sandbox creation creates worktree + branch\n- Test: metadata persists in vc_mission_state\n- Test: multiple tasks share same sandbox\n- Test: sequential tasks see each other's changes\n- Test: sandbox cleaned up on mission close\n- Test: CreateMissionSandbox is idempotent\n- Test: CleanupMissionSandbox is idempotent\n- All tests pass","status":"open","priority":1,"issue_type":"task","created_at":"2025-10-28T22:03:36.349593-07:00","updated_at":"2025-10-28T22:03:36.349593-07:00","dependencies":[{"issue_id":"vc-246","depends_on_id":"vc-217","type":"parent-child","created_at":"2025-10-28T22:04:21.441441-07:00","created_by":"stevey"},{"issue_id":"vc-246","depends_on_id":"vc-245","type":"blocks","created_at":"2025-10-28T22:05:07.870387-07:00","created_by":"stevey"}]}
