{"id":"vc-216","title":"Epic-Centric Infrastructure","description":"CURRENT: Executor claims individual issues without epic context. Workers don't scope to epics. No way to detect 'is this epic complete?'\n\nNEEDED: Core infrastructure for epic-centric workflow where workers operate within mission context.\n\nComponents:\n- Add mission/phase/review subtypes to epic type\n- Implement label-based claiming queries\n- Add terminal state detection (epic completion check)\n- Add get_mission_for_task() helper\n- Update executor to scope work to epics\n- Query: 'next ready task in any active mission'\n- Query: 'is this epic complete?' (all children done, no blockers)\n\nFROM: MISSIONS.md roadmap Epic 1 (P0)","design":"Database:\n- Use issue.subtype field (mission, phase, review)\n- Labels table for state tracking\n- Queries joining issues → dependencies → parent epics\n\nQueries to implement:\n1. IsEpicComplete(epicID):\n   - All children in terminal states (closed/deferred)\n   - No open blocking dependencies\n   - Return: bool\n\n2. GetNextReadyTask():\n   - Open tasks with no blockers\n   - Belonging to active missions (not waiting for gates)\n   - Return: taskID, missionID, sandboxPath\n\n3. GetMissionForTask(taskID):\n   - Walk parent-child deps up to epic with subtype=mission\n   - Return: missionID, sandboxPath, branchName\n\nExecutor changes:\n- After task completion: check if parent epic complete\n- If complete: add label 'needs-quality-gates'\n- Work claiming: filter by mission active state","acceptance_criteria":"- issue.subtype field added/used (mission, phase, review)\n- IsEpicComplete() query implemented and tested\n- GetNextReadyTask() returns mission context\n- GetMissionForTask() walks dependency tree\n- Executor checks epic completion after task done\n- Tests: create mission with tasks, verify completion detection\n- Tests: verify claiming scopes to active missions","notes":"Epic broken down into 5 child tasks:\n\nvc-232: Implement IsEpicComplete() query - Core method to detect epic completion\nvc-233: Implement GetMissionForTask() helper - Walk dependency tree to find mission\nvc-234: Enhance GetReadyWork to return mission context - Include mission metadata in ready work\nvc-235: Update executor to check epic completion after task execution - Integrate into executor flow\nvc-236: Add comprehensive tests for epic-centric infrastructure - Full test coverage\n\nDependency chain: vc-232, vc-233, vc-234 are ready and can be worked in parallel. vc-235 (executor) depends on all three. vc-236 (tests) depends on all others.\n\nNote: IssueSubtype field (mission/phase/normal) already exists in types, no schema changes needed.","status":"open","priority":1,"issue_type":"epic","created_at":"2025-10-28T15:40:09.420273-07:00","updated_at":"2025-10-28T18:35:26.83688-07:00","dependencies":[{"issue_id":"vc-216","depends_on_id":"vc-215","type":"parent-child","created_at":"2025-10-28T15:40:31.710766-07:00","created_by":"stevey"}]}
