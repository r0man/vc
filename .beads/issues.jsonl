{"id":"vc-218","title":"Label-Driven State Machine","description":"CURRENT: Status-only claiming (open/in_progress/closed). No workflow states. Workers claim any open work.\n\nNEEDED: Label-driven state machine where mission progress flows through states, claimed by different worker types.\n\nState flow:\n- task-ready → Code Workers claim\n- needs-quality-gates → QA Workers claim\n- needs-review → GitOps Arbiter claims\n- needs-human-approval → Human Approvers claim\n- approved → GitOps Merger claims\n\nLabels drive which worker claims what work.\n\nFROM: MISSIONS.md roadmap Epic 3 (P1)","design":"Label State Machine:\n1. Task completed → check epic complete\n2. If epic complete → add label 'needs-quality-gates' to mission\n3. QA worker claims missions with 'needs-quality-gates'\n4. Gates pass → remove 'needs-quality-gates', add 'needs-review'\n5. Arbiter claims missions with 'needs-review'\n6. Review done → remove 'needs-review', add 'needs-human-approval'\n7. Human approves → add 'approved' label\n8. Merger claims missions with 'approved' label\n\nHelper functions:\n- AddLabel(issueID, label)\n- RemoveLabel(issueID, label)\n- HasLabel(issueID, label)\n- TransitionState(issueID, fromLabel, toLabel)\n\nWorker claiming rules:\n- Code Workers: open tasks, mission not in (needs-quality-gates, needs-review)\n- QA Workers: missions with 'needs-quality-gates'\n- Arbiter: missions with 'needs-review'\n- Merger: missions with 'approved'\n\nState transitions logged to agent_events for monitoring.","acceptance_criteria":"- Label helpers implemented (Add/Remove/Has)\n- State transitions automatic after task completion\n- Epic completion triggers 'needs-quality-gates'\n- Each state has worker type that claims it\n- Labels block/unblock work appropriately\n- Tests: task complete → epic complete → needs-quality-gates\n- Tests: verify claiming rules filter by labels\n- Tests: state machine doesn't skip states","notes":"Implementation complete. Core state machine infrastructure delivered:\n\n✅ State machine core (internal/labels/state_machine.go)\n   - TransitionState(), HasLabel(), GetStateLabel()\n   - 5 state labels defined (task-ready, needs-quality-gates, needs-review, needs-human-approval, approved)\n   - 5 trigger types defined\n\n✅ Event infrastructure (internal/events/types.go)\n   - EventTypeLabelStateTransition\n   - LabelStateTransitionData\n\n✅ Executor integration\n   - Epic completion → needs-quality-gates (internal/executor/epic.go)\n   - Gates pass → needs-review (internal/executor/result_processor.go)\n\n✅ Comprehensive tests (internal/labels/state_machine_test.go)\n   - All tests passing\n\nSee VC-218-IMPLEMENTATION.md for full details.\n\nDEFERRED to follow-on issues:\n- Worker-type specific claiming (requires vc-219, vc-220, vc-221)\n- GetReadyWork filtering by labels\n- Review/approval/merge state transitions (no workers for those yet)\n\nThe foundation is in place. Future workers can now claim work based on state labels.","status":"open","priority":2,"issue_type":"epic","created_at":"2025-10-28T15:41:09.070728-07:00","updated_at":"2025-10-29T14:07:16.045684-07:00","dependencies":[{"issue_id":"vc-218","depends_on_id":"vc-215","type":"parent-child","created_at":"2025-10-28T15:41:31.723201-07:00","created_by":"stevey"},{"issue_id":"vc-218","depends_on_id":"vc-216","type":"blocks","created_at":"2025-10-28T15:41:36.80681-07:00","created_by":"stevey"}]}
